{"ast":null,"code":"var _jsxFileName = \"/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/StreetView/StreetView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./StreetView.css\";\nimport { StreetViewPanorama } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StreetView() {\n  _s();\n  const [isApiLoaded, setIsApiLoaded] = useState(false);\n  useEffect(() => {\n    // Simulate an API loaded check\n    // This is conceptual; in practice, LoadScript should handle the loading state\n    const checkApiLoaded = () => {\n      if (window.google && window.google.maps) {\n        setIsApiLoaded(true);\n      } else {\n        setTimeout(checkApiLoaded, 100); // Check again after a delay\n      }\n    };\n    checkApiLoaded();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"streetview__wrapper\",\n    children: isApiLoaded && /*#__PURE__*/_jsxDEV(StreetViewPanorama, {\n      position: {\n        lat: 42.345573,\n        lng: -71.098326\n      },\n      pov: {\n        heading: 34,\n        pitch: 10\n      },\n      zoom: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(StreetView, \"pC7n2Fgwb97r+nQ2nwAQV2Jxdjg=\");\n_c = StreetView;\nvar _c;\n$RefreshReg$(_c, \"StreetView\");","map":{"version":3,"names":["React","useState","useEffect","StreetViewPanorama","jsxDEV","_jsxDEV","StreetView","_s","isApiLoaded","setIsApiLoaded","checkApiLoaded","window","google","maps","setTimeout","className","children","position","lat","lng","pov","heading","pitch","zoom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/StreetView/StreetView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./StreetView.css\";\nimport { StreetViewPanorama } from '@react-google-maps/api';\n\nexport default function StreetView() {\n    const [isApiLoaded, setIsApiLoaded] = useState(false);\n\n    useEffect(() => {\n        // Simulate an API loaded check\n        // This is conceptual; in practice, LoadScript should handle the loading state\n        const checkApiLoaded = () => {\n            if (window.google && window.google.maps) {\n                setIsApiLoaded(true);\n            } else {\n                setTimeout(checkApiLoaded, 100); // Check again after a delay\n            }\n        };\n\n        checkApiLoaded();\n    }, []);\n\n    return (\n        <div className=\"streetview__wrapper\">\n            {isApiLoaded && (\n                <StreetViewPanorama\n                    position={{ lat: 42.345573, lng: -71.098326 }}\n                    pov={{ heading: 34, pitch: 10 }}\n                    zoom={1}\n                />\n            )}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,SAASC,kBAAkB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;MACzB,IAAIC,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;QACrCJ,cAAc,CAAC,IAAI,CAAC;MACxB,CAAC,MAAM;QACHK,UAAU,CAACJ,cAAc,EAAE,GAAG,CAAC,CAAC,CAAC;MACrC;IACJ,CAAC;IAEDA,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKU,SAAS,EAAC,qBAAqB;IAAAC,QAAA,EAC/BR,WAAW,iBACRH,OAAA,CAACF,kBAAkB;MACfc,QAAQ,EAAE;QAAEC,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE,CAAC;MAAU,CAAE;MAC9CC,GAAG,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAE;MAChCC,IAAI,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACpB,EAAA,CA5BuBD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}