{"ast":null,"code":"var _jsxFileName = \"/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map(props) {\n  _s();\n  const [mapCenter, setMapCenter] = useState({\n    lat: 38.90899666691537,\n    lng: -77.067332462228\n  });\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const minZoomLevel = 14;\n  const [currentDistance, setCurrentDistance] = useState(null);\n  const [currentScore, setCurrentScore] = useState(0);\n  const onMapClick = event => {\n    const dist = calculateDistance(props.currentImgData.lat, props.currentImgData.lng, event.latLng.lat(), event.latLng.lng());\n    setCurrentDistance(dist);\n    setCurrentDistance(calculateExponentialScore(dist));\n    console.log(`score: ${score} pts`);\n    setMarkerPosition({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n  const mapOptions = {\n    mapTypeControl: false,\n    fullscreenControl: false,\n    clickableIcons: false,\n    disableDoubleClickZoom: true,\n    streetViewControl: false,\n    minZoom: minZoomLevel\n  };\n  const handleGuess = () => {\n    props.setCurrentScore(score);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        height: \"80%\",\n        width: \"100%\",\n        top: 0,\n        outline: \"none\"\n      },\n      zoom: 14,\n      center: mapCenter,\n      onClick: onMapClick,\n      options: mapOptions,\n      children: markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess__btn__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"guess__btn\",\n        onClick: handleGuess(),\n        children: \" Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"rcz5vCKiuxGf9E42Po4hGekPFFk=\");\n_c = Map;\nfunction calculateDistance(lat1, lon1, lat2, lon2) {\n  const R = 6371e3; // Radius of the Earth in meters\n  const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\n  const φ2 = lat2 * Math.PI / 180;\n  const Δφ = (lat2 - lat1) * Math.PI / 180;\n  const Δλ = (lon2 - lon1) * Math.PI / 180;\n\n  // Haversine formula\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const distance = R * c; // Distance in meters\n\n  return Math.floor(distance);\n}\nfunction calculateExponentialScore(dist) {\n  const maxDistance = 1000; // Maximum distance for scoring\n  const minScore = 0; // Minimum score at or beyond max distance\n  const maxScore = 1000; // Maximum score for being very close\n\n  if (dist <= 10) {\n    return maxScore;\n  } else if (dist > 10 && dist <= maxDistance) {\n    // Refined approach for exponential decay\n    // Adjust the decay factor directly to shape the curve\n    const decayFactor = -0.005; // Adjust this value to control the rate of decay\n    const score = maxScore * Math.exp(decayFactor * (dist - 10));\n\n    // Ensure score never drops below minScore\n    return Math.floor(Math.max(score, minScore));\n  } else {\n    return minScore;\n  }\n}\nfunction calculateLinearScore(dist) {\n  if (dist < 10) {\n    return 1000;\n  } else {\n    return Math.max(1010 - dist, 0);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","GoogleMap","Marker","jsxDEV","_jsxDEV","Map","props","_s","mapCenter","setMapCenter","lat","lng","markerPosition","setMarkerPosition","minZoomLevel","currentDistance","setCurrentDistance","currentScore","setCurrentScore","onMapClick","event","dist","calculateDistance","currentImgData","latLng","calculateExponentialScore","console","log","score","mapOptions","mapTypeControl","fullscreenControl","clickableIcons","disableDoubleClickZoom","streetViewControl","minZoom","handleGuess","className","children","mapContainerStyle","height","width","top","outline","zoom","center","onClick","options","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","distance","floor","maxDistance","minScore","maxScore","decayFactor","exp","max","calculateLinearScore","$RefreshReg$"],"sources":["/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleMap, Marker } from '@react-google-maps/api';\n\nimport \"./Map.css\";\n\nexport default function Map(props) {\n    const [mapCenter, setMapCenter] = useState({ lat: 38.90899666691537, lng: -77.067332462228 });\n    const [markerPosition, setMarkerPosition] = useState(null);\n    const minZoomLevel = 14;\n    const [currentDistance, setCurrentDistance] = useState(null);\n    const [currentScore, setCurrentScore] = useState(0);\n\n    const onMapClick = (event) => {\n        const dist = calculateDistance(props.currentImgData.lat, props.currentImgData.lng, event.latLng.lat(), event.latLng.lng());\n        setCurrentDistance(dist);\n        setCurrentDistance(calculateExponentialScore(dist));\n        console.log(`score: ${score} pts`);\n        \n\n        setMarkerPosition({\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n        });\n    };\n\n    const mapOptions = {\n        mapTypeControl: false,\n        fullscreenControl: false,\n        clickableIcons: false,\n        disableDoubleClickZoom: true,\n        streetViewControl: false,\n        minZoom: minZoomLevel\n    };\n\n    const handleGuess = () => {\n\n        props.setCurrentScore(score);\n    }\n\n    return (\n        <div className=\"map__wrapper\">\n            <GoogleMap\n                mapContainerStyle={{ height: \"80%\", width: \"100%\", top: 0, outline: \"none\",}}\n                zoom={14}\n                center={mapCenter}\n                onClick={onMapClick}\n                options={mapOptions}\n            >\n                {markerPosition && <Marker position={markerPosition} />}\n            </GoogleMap>\n            <div className=\"guess__btn__wrapper\">\n                <button \n                    className=\"guess__btn\"\n                    onClick={handleGuess()}\n                > Guess</button>\n            </div>\n        </div>\n    );\n}\n\nfunction calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371e3; // Radius of the Earth in meters\n    const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n\n    // Haversine formula\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n              Math.cos(φ1) * Math.cos(φ2) *\n              Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in meters\n\n    return Math.floor(distance);\n}\n\nfunction calculateExponentialScore(dist) {\n    const maxDistance = 1000; // Maximum distance for scoring\n    const minScore = 0; // Minimum score at or beyond max distance\n    const maxScore = 1000; // Maximum score for being very close\n\n    if (dist <= 10) {\n        return maxScore;\n    } else if (dist > 10 && dist <= maxDistance) {\n        // Refined approach for exponential decay\n        // Adjust the decay factor directly to shape the curve\n        const decayFactor = -0.005; // Adjust this value to control the rate of decay\n        const score = maxScore * Math.exp(decayFactor * (dist - 10));\n\n        // Ensure score never drops below minScore\n        return Math.floor(Math.max(score, minScore));\n    } else {\n        return minScore;\n    }\n}\n\nfunction calculateLinearScore (dist) {\n    if (dist < 10) {\n        return 1000;\n    }\n    else {\n        return Math.max(1010 - dist, 0);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}