{"ast":null,"code":"var _jsxFileName = \"/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map(props) {\n  _s();\n  const mapStyles = {\n    height: \"50vh\",\n    width: \"50%\"\n  };\n  const defaultCenter = {\n    lat: 38.90899666691537,\n    lng: -77.067332462228\n  };\n\n  // State for the marker position\n  const [markerPosition, setMarkerPosition] = useState(null);\n\n  // State for the map's center\n  const [mapCenter, setMapCenter] = useState(defaultCenter);\n  const onMapClick = event => {\n    console.log(event.latLng.lat());\n    console.log(event.latLng.lng());\n    setMarkerPosition({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n  const onBoundsChanged = () => {\n    const map = mapRef.current;\n    // Define the boundaries of your area here\n    const allowedBounds = new window.google.maps.LatLngBounds(new window.google.maps.LatLng(38.92297059229842, -77.0888081871093),\n    // Southwest coordinates\n    new window.google.maps.LatLng(38.89503812156255, -77.04347055671803) // Northeast coordinates\n    );\n    if (!allowedBounds.contains(map.getCenter())) {\n      // If out of bounds, reset the center\n      let newCenter = map.getCenter();\n      if (map.getCenter().lat() > allowedBounds.getNorthEast().lat()) {\n        newCenter = new window.google.maps.LatLng(allowedBounds.getNorthEast().lat(), newCenter.lng());\n      }\n      if (map.getCenter().lat() < allowedBounds.getSouthWest().lat()) {\n        newCenter = new window.google.maps.LatLng(allowedBounds.getSouthWest().lat(), newCenter.lng());\n      }\n      if (map.getCenter().lng() > allowedBounds.getNorthEast().lng()) {\n        newCenter = new window.google.maps.LatLng(newCenter.lat(), allowedBounds.getNorthEast().lng());\n      }\n      if (map.getCenter().lng() < allowedBounds.getSouthWest().lng()) {\n        newCenter = new window.google.maps.LatLng(newCenter.lat(), allowedBounds.getSouthWest().lng());\n      }\n      map.panTo(newCenter);\n    }\n  };\n\n  // Map options\n  const mapOptions = {\n    mapTypeControl: false,\n    // Disable Map/Satellite toggle\n    fullscreenControl: false,\n    // Disable Full Screen option\n    clickableIcons: false\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBfr_271qEHFo2CUz8YAwlSmfAYIuocGdU\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 13,\n      center: mapCenter,\n      onClick: onMapClick,\n      options: mapOptions,\n      onBoundsChanged: onBoundsChanged,\n      children: markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"BZH1vrkTEdySDxb9BcakhLN1yJk=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Map","props","_s","mapStyles","height","width","defaultCenter","lat","lng","markerPosition","setMarkerPosition","mapCenter","setMapCenter","onMapClick","event","console","log","latLng","onBoundsChanged","map","mapRef","current","allowedBounds","window","google","maps","LatLngBounds","LatLng","contains","getCenter","newCenter","getNorthEast","getSouthWest","panTo","mapOptions","mapTypeControl","fullscreenControl","clickableIcons","googleMapsApiKey","children","mapContainerStyle","zoom","center","onClick","options","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nexport default function Map(props) {\n    const mapStyles = {        \n        height: \"50vh\",\n        width: \"50%\"\n    };\n\n    const defaultCenter = {\n        lat: 38.90899666691537, \n        lng: -77.067332462228,\n    };\n\n    // State for the marker position\n    const [markerPosition, setMarkerPosition] = useState(null);\n    \n    // State for the map's center\n    const [mapCenter, setMapCenter] = useState(defaultCenter);\n\n    const onMapClick = (event) => {\n        console.log(event.latLng.lat())\n        console.log(event.latLng.lng())\n        setMarkerPosition({\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n        });\n    };\n\n    const onBoundsChanged = () => {\n        const map = mapRef.current;\n        // Define the boundaries of your area here\n        const allowedBounds = new window.google.maps.LatLngBounds(\n            new window.google.maps.LatLng(38.92297059229842, -77.0888081871093), // Southwest coordinates\n            new window.google.maps.LatLng(38.89503812156255, -77.04347055671803)  // Northeast coordinates\n        );\n        if (!allowedBounds.contains(map.getCenter())) {\n            // If out of bounds, reset the center\n            let newCenter = map.getCenter();\n\n            if (map.getCenter().lat() > allowedBounds.getNorthEast().lat()) {\n                newCenter = new window.google.maps.LatLng(allowedBounds.getNorthEast().lat(), newCenter.lng());\n            }\n            if (map.getCenter().lat() < allowedBounds.getSouthWest().lat()) {\n                newCenter = new window.google.maps.LatLng(allowedBounds.getSouthWest().lat(), newCenter.lng());\n            }\n            if (map.getCenter().lng() > allowedBounds.getNorthEast().lng()) {\n                newCenter = new window.google.maps.LatLng(newCenter.lat(), allowedBounds.getNorthEast().lng());\n            }\n            if (map.getCenter().lng() < allowedBounds.getSouthWest().lng()) {\n                newCenter = new window.google.maps.LatLng(newCenter.lat(), allowedBounds.getSouthWest().lng());\n            }\n            map.panTo(newCenter);\n        }\n    };\n\n    // Map options\n    const mapOptions = {\n        mapTypeControl: false, // Disable Map/Satellite toggle\n        fullscreenControl: false, // Disable Full Screen option\n        clickableIcons: false,\n    };\n\n    \n\n    return (\n        <LoadScript googleMapsApiKey=\"AIzaSyBfr_271qEHFo2CUz8YAwlSmfAYIuocGdU\">\n            <GoogleMap\n                mapContainerStyle={mapStyles}\n                zoom={13}\n                center={mapCenter}\n                onClick={onMapClick}\n                options={mapOptions}\n                onBoundsChanged={onBoundsChanged}\n            >\n                {markerPosition && <Marker position={markerPosition}/>}\n            </GoogleMap>\n        </LoadScript>\n    );\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}