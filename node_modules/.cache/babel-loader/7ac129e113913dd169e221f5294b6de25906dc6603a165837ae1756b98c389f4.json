{"ast":null,"code":"var _jsxFileName = \"/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map(props) {\n  _s();\n  const mapStyles = {\n    height: \"50vh\",\n    width: \"50%\"\n  };\n  const defaultCenter = {\n    lat: 38.90899666691537,\n    lng: -77.067332462228\n  };\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const [mapCenter, setMapCenter] = useState(defaultCenter);\n  const mapRef = useRef(null);\n  const onMapLoad = map => {\n    mapRef.current = map;\n  };\n  const onMapClick = event => {\n    setMarkerPosition({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n  const checkBounds = () => {\n    const map = mapRef.current;\n    if (!map) return;\n    const allowedBounds = new window.google.maps.LatLngBounds(new window.google.maps.LatLng(38.92297059229842, -77.0888081871093), new window.google.maps.LatLng(38.89503812156255, -77.04347055671803));\n    if (!allowedBounds.contains(map.getCenter())) {\n      let newCenter = map.getCenter();\n      if (map.getCenter().lat() > allowedBounds.getNorthEast().lat()) {\n        newCenter = new window.google.maps.LatLng(allowedBounds.getNorthEast().lat(), newCenter.lng());\n      }\n      if (map.getCenter().lat() < allowedBounds.getSouthWest().lat()) {\n        newCenter = new window.google.maps.LatLng(allowedBounds.getSouthWest().lat(), newCenter.lng());\n      }\n      if (map.getCenter().lng() > allowedBounds.getNorthEast().lng()) {\n        newCenter = new window.google.maps.LatLng(newCenter.lat(), allowedBounds.getNorthEast().lng());\n      }\n      if (map.getCenter().lng() < allowedBounds.getSouthWest().lng()) {\n        newCenter = new window.google.maps.LatLng(newCenter.lat(), allowedBounds.getSouthWest().lng());\n      }\n      map.panTo(newCenter);\n    }\n  };\n\n  // Map options\n  const mapOptions = {\n    mapTypeControl: false,\n    fullscreenControl: false,\n    clickableIcons: false\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBfr_271qEHFo2CUz8YAwlSmfAYIuocGdU\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 13,\n      center: mapCenter,\n      onClick: onMapClick,\n      onLoad: onMapLoad,\n      onDragEnd: checkBounds,\n      onZoomChanged: checkBounds,\n      options: mapOptions,\n      children: markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"bncXIKnnNs3ifk4SJRCR6N2p4M0=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Map","props","_s","mapStyles","height","width","defaultCenter","lat","lng","markerPosition","setMarkerPosition","mapCenter","setMapCenter","mapRef","onMapLoad","map","current","onMapClick","event","latLng","checkBounds","allowedBounds","window","google","maps","LatLngBounds","LatLng","contains","getCenter","newCenter","getNorthEast","getSouthWest","panTo","mapOptions","mapTypeControl","fullscreenControl","clickableIcons","googleMapsApiKey","children","mapContainerStyle","zoom","center","onClick","onLoad","onDragEnd","onZoomChanged","options","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nexport default function Map(props) {\n    const mapStyles = {        \n        height: \"50vh\",\n        width: \"50%\"\n    };\n\n    const defaultCenter = {\n        lat: 38.90899666691537, \n        lng: -77.067332462228,\n    };\n\n    const [markerPosition, setMarkerPosition] = useState(null);\n    const [mapCenter, setMapCenter] = useState(defaultCenter);\n    const mapRef = useRef(null);\n\n    const onMapLoad = (map) => {\n        mapRef.current = map;\n    };\n\n    const onMapClick = (event) => {\n        setMarkerPosition({\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n        });\n    };\n\n    const checkBounds = () => {\n        const map = mapRef.current;\n\n        if (!map) return; \n\n        const allowedBounds = new window.google.maps.LatLngBounds(\n            new window.google.maps.LatLng(38.92297059229842, -77.0888081871093), \n            new window.google.maps.LatLng(38.89503812156255, -77.04347055671803) \n        );\n\n        if (!allowedBounds.contains(map.getCenter())) {\n            let newCenter = map.getCenter();\n\n            if (map.getCenter().lat() > allowedBounds.getNorthEast().lat()) {\n                newCenter = new window.google.maps.LatLng(allowedBounds.getNorthEast().lat(), newCenter.lng());\n            }\n            if (map.getCenter().lat() < allowedBounds.getSouthWest().lat()) {\n                newCenter = new window.google.maps.LatLng(allowedBounds.getSouthWest().lat(), newCenter.lng());\n            }\n            if (map.getCenter().lng() > allowedBounds.getNorthEast().lng()) {\n                newCenter = new window.google.maps.LatLng(newCenter.lat(), allowedBounds.getNorthEast().lng());\n            }\n            if (map.getCenter().lng() < allowedBounds.getSouthWest().lng()) {\n                newCenter = new window.google.maps.LatLng(newCenter.lat(), allowedBounds.getSouthWest().lng());\n            }\n            map.panTo(newCenter);\n        }\n    };\n\n    // Map options\n    const mapOptions = {\n        mapTypeControl: false,\n        fullscreenControl: false,\n        clickableIcons: false,\n    };\n\n    return (\n        <LoadScript googleMapsApiKey=\"AIzaSyBfr_271qEHFo2CUz8YAwlSmfAYIuocGdU\">\n            <GoogleMap\n                mapContainerStyle={mapStyles}\n                zoom={13}\n                center={mapCenter}\n                onClick={onMapClick}\n                onLoad={onMapLoad}\n                onDragEnd={checkBounds}\n                onZoomChanged={checkBounds}\n                options={mapOptions}\n            >\n                {markerPosition && <Marker position={markerPosition}/>}\n            </GoogleMap>\n        </LoadScript>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}