{"ast":null,"code":"var _jsxFileName = \"/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map(props) {\n  _s();\n  const mapStyles = {\n    height: \"50vh\",\n    width: \"50%\"\n  };\n  const defaultCenter = {\n    lat: 41.3851,\n    lng: 2.1734\n  };\n\n  // State for the marker position\n  const [markerPosition, setMarkerPosition] = useState(null);\n\n  // Use this state to explicitly change the map's center when needed\n  const [mapCenter, setMapCenter] = useState(defaultCenter);\n  const onMapClick = event => {\n    setMarkerPosition({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n    // Consider updating mapCenter here if you want to re-center on marker placement\n  };\n  const mapOptions = {\n    streetViewControl: false,\n    // Disable Street View\n    mapTypeControl: false,\n    // Disable Map/Satellite toggle\n    fullscreenControl: false,\n    // Disable Full Screen option\n    clickableIcons: false,\n    // Disable POI Clicks\n    gestureHandling: 'auto'\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyCnBKASLNJoWMGVatxoo456e7WO9ELADAw\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 13,\n      center: mapCenter // Use dynamic center state\n      ,\n      onClick: onMapClick,\n      options: {\n        gestureHandling: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"BZH1vrkTEdySDxb9BcakhLN1yJk=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Map","props","_s","mapStyles","height","width","defaultCenter","lat","lng","markerPosition","setMarkerPosition","mapCenter","setMapCenter","onMapClick","event","latLng","mapOptions","streetViewControl","mapTypeControl","fullscreenControl","clickableIcons","gestureHandling","googleMapsApiKey","children","mapContainerStyle","zoom","center","onClick","options","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nexport default function Map(props) {\n    const mapStyles = {        \n        height: \"50vh\",\n        width: \"50%\"\n    };\n\n    const defaultCenter = {\n        lat: 41.3851, \n        lng: 2.1734\n    };\n\n    // State for the marker position\n    const [markerPosition, setMarkerPosition] = useState(null);\n    \n    // Use this state to explicitly change the map's center when needed\n    const [mapCenter, setMapCenter] = useState(defaultCenter);\n\n    const onMapClick = (event) => {\n        setMarkerPosition({\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n        });\n        // Consider updating mapCenter here if you want to re-center on marker placement\n    };\n\n    const mapOptions = {\n        streetViewControl: false, // Disable Street View\n        mapTypeControl: false, // Disable Map/Satellite toggle\n        fullscreenControl: false, // Disable Full Screen option\n        clickableIcons: false, // Disable POI Clicks\n        gestureHandling: 'auto'\n    };\n\n    return (\n        <LoadScript googleMapsApiKey=\"AIzaSyCnBKASLNJoWMGVatxoo456e7WO9ELADAw\">\n            <GoogleMap\n                mapContainerStyle={mapStyles}\n                zoom={13}\n                center={mapCenter} // Use dynamic center state\n                onClick={onMapClick}\n                options={{ gestureHandling: 'auto' }}\n            >\n                <Marker position={markerPosition}/>\n            </GoogleMap>\n        </LoadScript>\n    );\n}\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,eAAe,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC/B,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EAED,MAAMC,aAAa,GAAG;IAClBC,GAAG,EAAE,OAAO;IACZC,GAAG,EAAE;EACT,CAAC;;EAED;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAACY,aAAa,CAAC;EAEzD,MAAMO,UAAU,GAAIC,KAAK,IAAK;IAC1BJ,iBAAiB,CAAC;MACdH,GAAG,EAAEO,KAAK,CAACC,MAAM,CAACR,GAAG,CAAC,CAAC;MACvBC,GAAG,EAAEM,KAAK,CAACC,MAAM,CAACP,GAAG,CAAC;IAC1B,CAAC,CAAC;IACF;EACJ,CAAC;EAED,MAAMQ,UAAU,GAAG;IACfC,iBAAiB,EAAE,KAAK;IAAE;IAC1BC,cAAc,EAAE,KAAK;IAAE;IACvBC,iBAAiB,EAAE,KAAK;IAAE;IAC1BC,cAAc,EAAE,KAAK;IAAE;IACvBC,eAAe,EAAE;EACrB,CAAC;EAED,oBACItB,OAAA,CAACH,UAAU;IAAC0B,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eAClExB,OAAA,CAACJ,SAAS;MACN6B,iBAAiB,EAAErB,SAAU;MAC7BsB,IAAI,EAAE,EAAG;MACTC,MAAM,EAAEf,SAAU,CAAC;MAAA;MACnBgB,OAAO,EAAEd,UAAW;MACpBe,OAAO,EAAE;QAAEP,eAAe,EAAE;MAAO,CAAE;MAAAE,QAAA,eAErCxB,OAAA,CAACF,MAAM;QAACgC,QAAQ,EAAEpB;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB;AAAC/B,EAAA,CA9CuBF,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}