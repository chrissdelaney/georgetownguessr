{"ast":null,"code":"var _jsxFileName = \"/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map(props) {\n  _s();\n  const mapStyles = {\n    height: \"50vh\",\n    width: \"50%\"\n  };\n  const defaultCenter = {\n    lat: 38.90899666691537,\n    lng: -77.067332462228\n  };\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const mapRef = useRef(null);\n  const onMapLoad = map => {\n    mapRef.current = map;\n    console.log(\"Map loaded with options:\", mapRef.current.get('maxZoom'));\n  };\n  const onMapClick = event => {\n    setMarkerPosition({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n  const mapOptions = {\n    mapTypeControl: false,\n    fullscreenControl: false,\n    clickableIcons: false,\n    maxZoom: 17\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBfr_271qEHFo2CUz8YAwlSmfAYIuocGdU\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapStyles,\n      zoom: 13,\n      center: defaultCenter,\n      onClick: onMapClick,\n      onLoad: onMapLoad,\n      options: mapOptions,\n      children: markerPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Map, \"J+fmL4AG6Cmsmr6xAIHIqNg4MiQ=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","Map","props","_s","mapStyles","height","width","defaultCenter","lat","lng","markerPosition","setMarkerPosition","mapRef","onMapLoad","map","current","console","log","get","onMapClick","event","latLng","mapOptions","mapTypeControl","fullscreenControl","clickableIcons","maxZoom","googleMapsApiKey","children","mapContainerStyle","zoom","center","onClick","onLoad","options","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/Map/Map.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nexport default function Map(props) {\n    const mapStyles = {        \n        height: \"50vh\",\n        width: \"50%\"\n    };\n\n    const defaultCenter = {\n        lat: 38.90899666691537, \n        lng: -77.067332462228,\n    };\n\n    const [markerPosition, setMarkerPosition] = useState(null);\n    const mapRef = useRef(null);\n\n    const onMapLoad = (map) => {\n        mapRef.current = map;\n        console.log(\"Map loaded with options:\", mapRef.current.get('maxZoom'));\n    };\n\n    const onMapClick = (event) => {\n        setMarkerPosition({\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng()\n        });\n    };\n\n    const mapOptions = {\n        mapTypeControl: false, \n        fullscreenControl: false, \n        clickableIcons: false,\n        maxZoom: 17,\n    };\n\n    return (\n        <LoadScript googleMapsApiKey=\"AIzaSyBfr_271qEHFo2CUz8YAwlSmfAYIuocGdU\">\n            <GoogleMap\n                mapContainerStyle={mapStyles}\n                zoom={13}\n                center={defaultCenter}\n                onClick={onMapClick}\n                onLoad={onMapLoad}\n                options={mapOptions}\n            >\n                {markerPosition && <Marker position={markerPosition}/>}\n            </GoogleMap>\n        </LoadScript>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,eAAe,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC/B,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACX,CAAC;EAED,MAAMC,aAAa,GAAG;IAClBC,GAAG,EAAE,iBAAiB;IACtBC,GAAG,EAAE,CAAC;EACV,CAAC;EAED,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMkB,MAAM,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAMkB,SAAS,GAAIC,GAAG,IAAK;IACvBF,MAAM,CAACG,OAAO,GAAGD,GAAG;IACpBE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,MAAM,CAACG,OAAO,CAACG,GAAG,CAAC,SAAS,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC1BT,iBAAiB,CAAC;MACdH,GAAG,EAAEY,KAAK,CAACC,MAAM,CAACb,GAAG,CAAC,CAAC;MACvBC,GAAG,EAAEW,KAAK,CAACC,MAAM,CAACZ,GAAG,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC;EAED,MAAMa,UAAU,GAAG;IACfC,cAAc,EAAE,KAAK;IACrBC,iBAAiB,EAAE,KAAK;IACxBC,cAAc,EAAE,KAAK;IACrBC,OAAO,EAAE;EACb,CAAC;EAED,oBACI1B,OAAA,CAACH,UAAU;IAAC8B,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eAClE5B,OAAA,CAACJ,SAAS;MACNiC,iBAAiB,EAAEzB,SAAU;MAC7B0B,IAAI,EAAE,EAAG;MACTC,MAAM,EAAExB,aAAc;MACtByB,OAAO,EAAEb,UAAW;MACpBc,MAAM,EAAEpB,SAAU;MAClBqB,OAAO,EAAEZ,UAAW;MAAAM,QAAA,EAEnBlB,cAAc,iBAAIV,OAAA,CAACF,MAAM;QAACqC,QAAQ,EAAEzB;MAAe;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB;AAACpC,EAAA,CA/CuBF,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}