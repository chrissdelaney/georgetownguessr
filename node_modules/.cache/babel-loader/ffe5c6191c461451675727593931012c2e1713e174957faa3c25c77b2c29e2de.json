{"ast":null,"code":"var _jsxFileName = \"/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/StreetView/StreetView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GoogleStreetview from 'react-google-streetview';\nimport \"./StreetView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StreetView(props) {\n  _s();\n  const googleMapsApiKey = props.googleMapsApiKey;\n  const streetViewPanoramaOptions = {\n    position: {\n      lat: 38.90768333333333,\n      lng: -77.07220555555556\n    },\n    // Example coordinates\n    pov: {\n      heading: 230,\n      pitch: 14\n    },\n    // Point of view: direction and angle\n    zoom: 1,\n    disableDefaultUI: true,\n    // Disable the default UI to remove most controls\n    addressControl: false,\n    // Hide the address\n    clickToGo: true,\n    showRoadLabels: false,\n    // Hide road labels\n    enableCloseButton: false,\n    // Hide close button\n    motionTracking: false,\n    // Disable motion tracking\n    motionTrackingControl: false,\n    // Disable motion tracking control\n    linksControl: false // Disable links to other street views\n  };\n  const [locData, setLocData] = useState({\n    lat: 38.90768333333333,\n    lng: -77.07220555555556,\n    heading: 250,\n    pitch: 10,\n    zoom: 1\n  });\n  const handlePositonChange = pos => {\n    setLocData(oldData => {\n      return {\n        ...oldData,\n        lat: pos.lat(),\n        lng: pos.lng()\n      };\n    });\n    logLocData();\n  };\n  const handlePovChange = pov => {\n    setLocData(oldData => {\n      return {\n        ...oldData,\n        heading: pov.heading,\n        pitch: pov.pitch,\n        zoom: pov.zoom\n      };\n    });\n    logLocData();\n  };\n  const logLocData = () => {\n    console.log(`\n            lat: ${locData.lat},\n            lng: ${locData.lng},\n            heading: ${locData.heading},\n            pitch: ${locData.pitch},\n            zoom: ${locData.zoom},\n        `);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"streetview__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(GoogleStreetview, {\n      apiKey: googleMapsApiKey,\n      streetViewPanoramaOptions: streetViewPanoramaOptions,\n      style: {\n        width: '100%',\n        // Adjust these values based on your layout needs\n        height: '100%'\n      },\n      onPositionChanged: handlePositonChange,\n      onPovChanged: handlePovChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(StreetView, \"P5/0D24rCIuecZ8f4kGodFxR7do=\");\n_c = StreetView;\nvar _c;\n$RefreshReg$(_c, \"StreetView\");","map":{"version":3,"names":["React","useState","GoogleStreetview","jsxDEV","_jsxDEV","StreetView","props","_s","googleMapsApiKey","streetViewPanoramaOptions","position","lat","lng","pov","heading","pitch","zoom","disableDefaultUI","addressControl","clickToGo","showRoadLabels","enableCloseButton","motionTracking","motionTrackingControl","linksControl","locData","setLocData","handlePositonChange","pos","oldData","logLocData","handlePovChange","console","log","className","children","apiKey","style","width","height","onPositionChanged","onPovChanged","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chrisdelaney/Downloads/games/georgetownguessr/src/components/StreetView/StreetView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GoogleStreetview from 'react-google-streetview';\n\nimport \"./StreetView.css\";\n\nexport default function StreetView(props) {\n    const googleMapsApiKey = props.googleMapsApiKey;\n    const streetViewPanoramaOptions = {\n        position: {lat: 38.90768333333333 , lng: -77.07220555555556}, // Example coordinates\n        pov: { heading: 230, pitch: 14 }, // Point of view: direction and angle\n        zoom: 1,\n        disableDefaultUI: true, // Disable the default UI to remove most controls\n        addressControl: false, // Hide the address\n        clickToGo: true,\n        showRoadLabels: false, // Hide road labels\n        enableCloseButton: false, // Hide close button\n        motionTracking: false, // Disable motion tracking\n        motionTrackingControl: false, // Disable motion tracking control\n        linksControl: false // Disable links to other street views\n    };\n\n    const [locData, setLocData] = useState({\n        lat: 38.90768333333333,\n        lng: -77.07220555555556,\n        heading: 250,\n        pitch: 10,\n        zoom: 1,\n    })\n\n    const handlePositonChange = (pos) => {\n        setLocData(oldData => {\n            return {\n                ...oldData,\n                lat: pos.lat(),\n                lng: pos.lng(),\n            }\n        })\n        logLocData();\n    }\n\n    const handlePovChange = (pov) => {\n        setLocData(oldData => {\n            return {\n                ...oldData,\n                heading: pov.heading,\n                pitch: pov.pitch,\n                zoom: pov.zoom,\n            }\n        });\n        logLocData();\n    }\n\n    const logLocData = () => {\n        console.log(`\n            lat: ${locData.lat},\n            lng: ${locData.lng},\n            heading: ${locData.heading},\n            pitch: ${locData.pitch},\n            zoom: ${locData.zoom},\n        `)\n    }\n\n\n\n    return (\n        <div className=\"streetview__wrapper\">\n            <GoogleStreetview\n                apiKey={googleMapsApiKey}\n                streetViewPanoramaOptions={streetViewPanoramaOptions}\n                style={{\n                    width: '100%', // Adjust these values based on your layout needs\n                    height: '100%'\n                }}\n                onPositionChanged={handlePositonChange}\n                onPovChanged={handlePovChange}\n            />\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,yBAAyB;AAEtD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAMC,gBAAgB,GAAGF,KAAK,CAACE,gBAAgB;EAC/C,MAAMC,yBAAyB,GAAG;IAC9BC,QAAQ,EAAE;MAACC,GAAG,EAAE,iBAAiB;MAAGC,GAAG,EAAE,CAAC;IAAiB,CAAC;IAAE;IAC9DC,GAAG,EAAE;MAAEC,OAAO,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAG,CAAC;IAAE;IAClCC,IAAI,EAAE,CAAC;IACPC,gBAAgB,EAAE,IAAI;IAAE;IACxBC,cAAc,EAAE,KAAK;IAAE;IACvBC,SAAS,EAAE,IAAI;IACfC,cAAc,EAAE,KAAK;IAAE;IACvBC,iBAAiB,EAAE,KAAK;IAAE;IAC1BC,cAAc,EAAE,KAAK;IAAE;IACvBC,qBAAqB,EAAE,KAAK;IAAE;IAC9BC,YAAY,EAAE,KAAK,CAAC;EACxB,CAAC;EAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC;IACnCU,GAAG,EAAE,iBAAiB;IACtBC,GAAG,EAAE,CAAC,iBAAiB;IACvBE,OAAO,EAAE,GAAG;IACZC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,MAAMW,mBAAmB,GAAIC,GAAG,IAAK;IACjCF,UAAU,CAACG,OAAO,IAAI;MAClB,OAAO;QACH,GAAGA,OAAO;QACVlB,GAAG,EAAEiB,GAAG,CAACjB,GAAG,CAAC,CAAC;QACdC,GAAG,EAAEgB,GAAG,CAAChB,GAAG,CAAC;MACjB,CAAC;IACL,CAAC,CAAC;IACFkB,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMC,eAAe,GAAIlB,GAAG,IAAK;IAC7Ba,UAAU,CAACG,OAAO,IAAI;MAClB,OAAO;QACH,GAAGA,OAAO;QACVf,OAAO,EAAED,GAAG,CAACC,OAAO;QACpBC,KAAK,EAAEF,GAAG,CAACE,KAAK;QAChBC,IAAI,EAAEH,GAAG,CAACG;MACd,CAAC;IACL,CAAC,CAAC;IACFc,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACrBE,OAAO,CAACC,GAAG,CAAE;AACrB,mBAAmBR,OAAO,CAACd,GAAI;AAC/B,mBAAmBc,OAAO,CAACb,GAAI;AAC/B,uBAAuBa,OAAO,CAACX,OAAQ;AACvC,qBAAqBW,OAAO,CAACV,KAAM;AACnC,oBAAoBU,OAAO,CAACT,IAAK;AACjC,SAAS,CAAC;EACN,CAAC;EAID,oBACIZ,OAAA;IAAK8B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChC/B,OAAA,CAACF,gBAAgB;MACbkC,MAAM,EAAE5B,gBAAiB;MACzBC,yBAAyB,EAAEA,yBAA0B;MACrD4B,KAAK,EAAE;QACHC,KAAK,EAAE,MAAM;QAAE;QACfC,MAAM,EAAE;MACZ,CAAE;MACFC,iBAAiB,EAAEb,mBAAoB;MACvCc,YAAY,EAAEV;IAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtC,EAAA,CAzEuBF,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}